{
  "_args": [
    [
      {
        "raw": "cache-point@^0.3.4",
        "scope": null,
        "escapedName": "cache-point",
        "name": "cache-point",
        "rawSpec": "^0.3.4",
        "spec": ">=0.3.4 <0.4.0",
        "type": "range"
      },
      "/Users/townerhale/Desktop/GitHub/final-project-mockup/app/node_modules/dmd"
    ]
  ],
  "_from": "cache-point@>=0.3.4 <0.4.0",
  "_id": "cache-point@0.3.4",
  "_inCache": true,
  "_location": "/cache-point",
  "_nodeVersion": "6.7.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/cache-point-0.3.4.tgz_1476048587782_0.5622283685952425"
  },
  "_npmUser": {
    "name": "75lb",
    "email": "75pound@gmail.com"
  },
  "_npmVersion": "3.10.7",
  "_phantomChildren": {},
  "_requested": {
    "raw": "cache-point@^0.3.4",
    "scope": null,
    "escapedName": "cache-point",
    "name": "cache-point",
    "rawSpec": "^0.3.4",
    "spec": ">=0.3.4 <0.4.0",
    "type": "range"
  },
  "_requiredBy": [
    "/dmd",
    "/jsdoc-api"
  ],
  "_resolved": "https://registry.npmjs.org/cache-point/-/cache-point-0.3.4.tgz",
  "_shasum": "152db502c6bb23b5aa3f663e230d5de8ec4e4f3f",
  "_shrinkwrap": null,
  "_spec": "cache-point@^0.3.4",
  "_where": "/Users/townerhale/Desktop/GitHub/final-project-mockup/app/node_modules/dmd",
  "author": {
    "name": "Lloyd Brookes",
    "email": "75pound@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/75lb/cache-point/issues"
  },
  "dependencies": {
    "array-back": "^1.0.3",
    "core-js": "^2.4.1",
    "feature-detect-es6": "^1.3.1",
    "fs-then-native": "^1.0.2",
    "mkdirp": "~0.5.1"
  },
  "description": "Simple, filesystem-backed memoisation cache.",
  "devDependencies": {
    "babel-preset-es2015": "^6.16.0",
    "core-assert": "~0.2.1",
    "jsdoc-to-markdown": "^2.0.0-alpha.0",
    "test-runner": "~0.2.5"
  },
  "directories": {},
  "dist": {
    "shasum": "152db502c6bb23b5aa3f663e230d5de8ec4e4f3f",
    "tarball": "https://registry.npmjs.org/cache-point/-/cache-point-0.3.4.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "gitHead": "569d7a1f832aee1e1b4e5eb2d530513b0ccb7332",
  "homepage": "https://github.com/75lb/cache-point#readme",
  "keywords": [
    "memoisation",
    "memoization",
    "cache",
    "file",
    "store"
  ],
  "license": "MIT",
  "main": "index",
  "maintainers": [
    {
      "name": "75lb",
      "email": "75pound@gmail.com"
    }
  ],
  "name": "cache-point",
  "optionalDependencies": {},
  "readme": "[![view on npm](http://img.shields.io/npm/v/cache-point.svg)](https://www.npmjs.org/package/cache-point)\n[![npm module downloads](http://img.shields.io/npm/dt/cache-point.svg)](https://www.npmjs.org/package/cache-point)\n[![Build Status](https://travis-ci.org/75lb/cache-point.svg?branch=master)](https://travis-ci.org/75lb/cache-point)\n[![Dependency Status](https://david-dm.org/75lb/cache-point.svg)](https://david-dm.org/75lb/cache-point)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](https://github.com/feross/standard)\n\n<a name=\"module_cache-point\"></a>\n\n## cache-point\nA memoisation solution intended to cache the output of expensive operations, speeding up future invocations with the same input.\n\n**Example**  \n```js\nconst Cache = require('cache-point')\nconst cache = new Cache({ dir: 'tmp/example' })\n\n// The first invocation will take 3s, the rest instantaneous.\n// outputs: 'result'\ngetData('some input')\n  .then(console.log)\n\n// check the cache for output generated with this input.\n// cache.read() will resolve on hit, reject on miss.\nfunction getData (input) {\n  return cache\n    .read(input)\n    .catch(() => expensiveOperation(input))\n}\n\n// The expensive operation we're aiming to avoid,\n// (3 second cost per invocation)\nfunction expensiveOperation (input) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const output = 'result'\n      cache.write(input, output)\n      resolve(output)\n    }, 3000)\n  })\n}\n```\n\n* [cache-point](#module_cache-point)\n    * [Cache](#exp_module_cache-point--Cache) ⏏\n        * [new Cache([options])](#new_module_cache-point--Cache_new)\n        * [.dir](#module_cache-point--Cache.Cache+dir) : <code>string</code>\n        * [.read(keys)](#module_cache-point--Cache+read) ⇒ <code>Promise</code>\n        * [.readSync(keys)](#module_cache-point--Cache+readSync) ⇒ <code>string</code>\n        * [.write(keys, content)](#module_cache-point--Cache+write) ⇒ <code>Promise</code>\n        * [.writeSync(keys, content)](#module_cache-point--Cache+writeSync)\n        * [.getChecksum(keys)](#module_cache-point--Cache+getChecksum) ⇒ <code>string</code>\n        * [.clear()](#module_cache-point--Cache+clear) ⇒ <code>Promise</code>\n        * [.remove()](#module_cache-point--Cache+remove) ⇒ <code>Promise</code>\n\n<a name=\"exp_module_cache-point--Cache\"></a>\n\n### Cache ⏏\n**Kind**: Exported class  \n<a name=\"new_module_cache-point--Cache_new\"></a>\n\n#### new Cache([options])\n\n| Param | Type |\n| --- | --- |\n| [options] | <code>object</code> | \n| [options.dir] | <code>string</code> | \n\n<a name=\"module_cache-point--Cache.Cache+dir\"></a>\n\n#### cache.dir : <code>string</code>\nCurrent cache directory. Can be changed at any time.\n\n**Kind**: instance property of <code>[Cache](#exp_module_cache-point--Cache)</code>  \n<a name=\"module_cache-point--Cache+read\"></a>\n\n#### cache.read(keys) ⇒ <code>Promise</code>\nA cache hit resolves with the stored value, a miss rejects.\n\n**Kind**: instance method of <code>[Cache](#exp_module_cache-point--Cache)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| keys | <code>\\*</code> | One or more values to uniquely identify the data. Can be any value, or an array of values of any type. |\n\n<a name=\"module_cache-point--Cache+readSync\"></a>\n\n#### cache.readSync(keys) ⇒ <code>string</code>\nA cache hit returns the stored value, a miss returns `null`.\n\n**Kind**: instance method of <code>[Cache](#exp_module_cache-point--Cache)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| keys | <code>\\*</code> | One or more values to uniquely identify the data. Can be any value, or an array of values of any type. |\n\n<a name=\"module_cache-point--Cache+write\"></a>\n\n#### cache.write(keys, content) ⇒ <code>Promise</code>\nWrite some data to the cache. Returns a promise which resolves when the write is complete.\n\n**Kind**: instance method of <code>[Cache](#exp_module_cache-point--Cache)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| keys | <code>\\*</code> | One or more values to index the data, e.g. a request object or set of function args. |\n| content | <code>\\*</code> | the data to store |\n\n<a name=\"module_cache-point--Cache+writeSync\"></a>\n\n#### cache.writeSync(keys, content)\nWrite some data to the cache with a key.\n\n**Kind**: instance method of <code>[Cache](#exp_module_cache-point--Cache)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| keys | <code>\\*</code> | One or more values to index the data, e.g. a request object or set of function args. |\n| content | <code>\\*</code> | the data to store |\n\n<a name=\"module_cache-point--Cache+getChecksum\"></a>\n\n#### cache.getChecksum(keys) ⇒ <code>string</code>\nUsed internally to convert a key value into a hex checksum. Override if for some reason you need a different hashing strategy.\n\n**Kind**: instance method of <code>[Cache](#exp_module_cache-point--Cache)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| keys | <code>\\*</code> | One or more values to index the data, e.g. a request object or set of function args. |\n\n<a name=\"module_cache-point--Cache+clear\"></a>\n\n#### cache.clear() ⇒ <code>Promise</code>\nClears the cache. Returns a promise which resolves once the cache is clear.\n\n**Kind**: instance method of <code>[Cache](#exp_module_cache-point--Cache)</code>  \n<a name=\"module_cache-point--Cache+remove\"></a>\n\n#### cache.remove() ⇒ <code>Promise</code>\nClears and removes the cache directory. Returns a promise which resolves once the remove is complete.\n\n**Kind**: instance method of <code>[Cache](#exp_module_cache-point--Cache)</code>  \n\n* * *\n\n&copy; 2016 Lloyd Brookes \\<75pound@gmail.com\\>. Documented by [jsdoc-to-markdown](https://github.com/jsdoc2md/jsdoc-to-markdown).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/75lb/cache-point.git"
  },
  "scripts": {
    "docs": "jsdoc2md -t jsdoc2md/README.hbs src/lib/*.js > README.md; echo",
    "es5": "rm -rf es5 && babel --presets babel-preset-es2015 --no-comments src --out-dir es5",
    "test": "node test.js"
  },
  "version": "0.3.4"
}
