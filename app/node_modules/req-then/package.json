{
  "_args": [
    [
      {
        "raw": "req-then@0.5.1",
        "scope": null,
        "escapedName": "req-then",
        "name": "req-then",
        "rawSpec": "0.5.1",
        "spec": "0.5.1",
        "type": "version"
      },
      "/Users/townerhale/Desktop/GitHub/final-project-mockup/app/node_modules/usage-stats"
    ]
  ],
  "_from": "req-then@0.5.1",
  "_id": "req-then@0.5.1",
  "_inCache": true,
  "_location": "/req-then",
  "_nodeVersion": "7.0.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/req-then-0.5.1.tgz_1478036146901_0.6152960355393589"
  },
  "_npmUser": {
    "name": "75lb",
    "email": "75pound@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "req-then@0.5.1",
    "scope": null,
    "escapedName": "req-then",
    "name": "req-then",
    "rawSpec": "0.5.1",
    "spec": "0.5.1",
    "type": "version"
  },
  "_requiredBy": [
    "/usage-stats"
  ],
  "_resolved": "https://registry.npmjs.org/req-then/-/req-then-0.5.1.tgz",
  "_shasum": "31c6e0b56f4ddd2acd6de0ba1bcea77b6079dfdf",
  "_shrinkwrap": null,
  "_spec": "req-then@0.5.1",
  "_where": "/Users/townerhale/Desktop/GitHub/final-project-mockup/app/node_modules/usage-stats",
  "author": {
    "name": "Lloyd Brookes",
    "email": "75pound@gmail.com"
  },
  "bin": {
    "req-then": "bin/cli.js"
  },
  "bugs": {
    "url": "https://github.com/75lb/req-then/issues"
  },
  "dependencies": {
    "array-back": "^1.0.3",
    "defer-promise": "^1.0.0",
    "feature-detect-es6": "^1.3.1",
    "lodash.pick": "^4.4.0",
    "typical": "^2.6.0"
  },
  "description": "Simple http(s) request function, returning a promise. ",
  "devDependencies": {
    "babel-preset-es2015": "^6.18.0",
    "jsdoc-to-markdown": "^2.0.1",
    "test-runner": "^0.2.5"
  },
  "directories": {},
  "dist": {
    "shasum": "31c6e0b56f4ddd2acd6de0ba1bcea77b6079dfdf",
    "tarball": "https://registry.npmjs.org/req-then/-/req-then-0.5.1.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "gitHead": "eab6393cf04c87897a36982517c07e6580d604c6",
  "homepage": "https://github.com/75lb/req-then#readme",
  "keywords": [
    "http",
    "https",
    "request",
    "promise",
    "then",
    "req",
    "es6",
    "native"
  ],
  "license": "MIT",
  "main": "index",
  "maintainers": [
    {
      "name": "75lb",
      "email": "75pound@gmail.com"
    }
  ],
  "name": "req-then",
  "optionalDependencies": {},
  "readme": "[![view on npm](http://img.shields.io/npm/v/req-then.svg)](https://www.npmjs.org/package/req-then)\n[![npm module downloads](http://img.shields.io/npm/dt/req-then.svg)](https://www.npmjs.org/package/req-then)\n[![Dependency Status](https://david-dm.org/75lb/req-then.svg)](https://david-dm.org/75lb/req-then)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](https://github.com/feross/standard)\n\n<a name=\"module_req-then\"></a>\n\n## req-then\nWraps node's built-in http(s) `request` function with a few extras:\n\n- Returns a promise, resolving to an object containing the data, node response and original request.\n- Automatically selects `http` or `https` transport depending on the input URL.\n- Cancellable (which `fetch` is not).\n\n**Example**  \n```js\nconst request = require('req-then')\n\nrequest('http://www.bbc.co.uk')\n\t.then(response => {\n\t\tconsole.log('Response data received', response.data)\n\t\tconsole.log('The original request options', response.req)\n\t\tconsole.log('The nodejs response instance', response.res)\n\t})\n\t.catch(console.error)\n```\n**Example**  \n```js\nconst request = require('req-then')\nconst url = require('url')\nconst reqOptions = url.parse('http://www.bbc.co.uk')\nconst controller = {}\nreqOptions.controller = controller\nrequest(reqOptions)\n\t.then(response => {\n\t\tconsole.log('Response data received', response.data)\n\t})\n\n// kill the request and close the socket\ncontroller.abort()\n```\n<a name=\"exp_module_req-then--request\"></a>\n\n### request(reqOptions, [data]) ⇒ <code>external:Promise</code> ⏏\nReturns a promise for the response.\n\n**Kind**: Exported function  \n**Resolve**: <code>object</code> - `res` will be the node response object, `data` will be the data, `req` the original request.  \n**Reject**: <code>Error</code> - If aborted, the `name` property of the error will be `aborted`.  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| reqOptions | <code>string</code> &#124; <code>object</code> | Target url string or a standard node.js http request options object. |\n| [reqOptions.controller] | <code>object</code> | If supplied, an `.abort()` method will be created on it which, if invoked, will cancel the request. Cancelling will cause the returned promise to reject with an `'aborted'` error. |\n| [data] | <code>\\*</code> | Data to send with the request. |\n\n\n* * *\n\n&copy; 2015-16 Lloyd Brookes \\<75pound@gmail.com\\>. Documented by [jsdoc-to-markdown](https://github.com/jsdoc2md/jsdoc-to-markdown).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/75lb/req-then.git"
  },
  "scripts": {
    "docs": "jsdoc2md -t jsdoc2md/README.hbs lib/*.js -l js > README.md; echo",
    "es5": "rm -rf es5 && babel --presets babel-preset-es2015 --no-comments lib --out-dir es5",
    "start": "node test/interactive/server.js",
    "test": "test-runner test/*.js"
  },
  "standard": {
    "ignore": [
      "es5"
    ]
  },
  "version": "0.5.1"
}
